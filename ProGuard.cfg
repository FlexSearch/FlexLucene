-forceprocessing
-dontobfuscate
-dontoptimize
-dontshrink

-injars lucene   
-outjars FlexLucene.jar

-libraryjars 'C:\Program Files\Java\jre1.8.0_60\lib\rt.jar'
-libraryjars lib

#-ignorewarnings
-skipnonpubliclibraryclasses

#-printmapping mapping.txt

-keepattributes Signature

-dontskipnonpubliclibraryclasses
#-obfuscationdictionary validnames.txt

#-dontpreverify
#-printseeds

-dontwarn org.apache.lucene.util.**

-dontnote org.apache.lucene.analysis.TokenStream
-dontnote org.apache.lucene.analysis.synonym.SynonymFilterFactory
-dontnote org.apache.lucene.analysis.util.AnalysisSPILoader
-dontnote org.apache.lucene.store.LockStressTest
-dontnote org.apache.lucene.util.CommandLineUtil

# Most of the warning are from RamUsageEstimator
-keep class org.apache.lucene.util.** { *; }
-keep class org.apache.lucene.store.** { *; }

-keep !public class ** { *; }
-keep public class ** { !public *; }

# Take care of dynamic access
-keep class java.nio.DirectByteBuffer { sun.misc.Cleaner cleaner(); }
-keep class sun.misc.Cleaner { void clean(); }
-keep class org.apache.lucene.util.RamUsageEstimator { java.lang.Object theUnsafe; }
-keep class com.sun.management.VMOption { java.lang.String getValue(); }
-keep class sun.misc.Unsafe { 
	int addressSize(); 
	int arrayIndexScale(java.lang.Class);
	long objectFieldOffset(java.lang.reflect.Field);
	int arrayBaseOffset(java.lang.Class);
}
-keep class com.sun.management.HotSpotDiagnosticMXBean { com.sun.management.VMOption getVMOption(java.lang.String); }

# Don't obfuscate enums
-keepclassmembers,allowoptimization enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}
